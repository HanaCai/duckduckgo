import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:rest_api/screen/detail.dart';
import 'package:rest_api/widget/card.dart';
import 'package:rest_api/models/Autogenerated.dart';

class Home extends StatefulWidget {
  const Home({super.key});

  @override
  State<Home> createState() => _HomeState();
}

class _HomeState extends State<Home> {
  TextEditingController searchEditingController = TextEditingController();

  @override
  // ignore: must_call_super
  initState() {
    fetchData('simpsons');
  }

  List<RelatedTopics>? users = [];
  @override
  Widget build(BuildContext context) {
    var screenSize = MediaQuery.of(context).size;
    bool isTablet = screenSize.shortestSide >= 600;
    return Scaffold(
      appBar: AppBar(title: Center(child: Text(""))),
      body: Stack(children: [
        Padding(
          padding: const EdgeInsets.only(top: 20, left: 20, right: 20),
          child: Container(
            height: 50,
            child: TextFormField(
              onChanged: (text) {
                if (text.isEmpty) {
                  FocusManager.instance.primaryFocus?.unfocus();
                  fetchData('simpsons');
                } else
                  fetchData(text);
              },
              controller: searchEditingController,
              decoration: InputDecoration(
                  contentPadding: EdgeInsets.only(top: 10, left: 15),
                  hintText: "search",
                  border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10))),
            ),
          ),
        ),
        Padding(
          padding: EdgeInsets.only(top: 80),
          child: ListView.builder(
            itemCount: users?.length,
            itemBuilder: (context, index) {
              final user = users?[index];
              return GestureDetector(
                onTap: () {
                  !isTablet
                      ? Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => Detail(userDetails: user)))
                      : print("");
                },
                child: CardWidget(showTitle: true, relatedTopics: user),
              );
            },
          ),
        ),
      ]),
    );
  }

  void fetchData(String text) async {
    print("Fetching Data${text}");
    var Url = 'http://api.duckduckgo.com/?q=${text}+characters&format=json';
    final uri = Uri.parse(Url);
    final response = await http.get(uri);
    final body = response.body;
    print(body);
    final json = jsonDecode(body);

    setState(() {
      users = Autogenerated.fromJson(json).relatedTopics;
      print("My User Dataa${users}");
    });
    print("get data");
  }
}
